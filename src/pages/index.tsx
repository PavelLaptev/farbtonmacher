import { useState } from "react";
import Head from "next/head";
import { generateShadeNames } from "@/utils";

import { ColorBlock, ShadesBlock, ControlsBlock, Sidebar } from "@/components";

import styles from "./styles.module.scss";

export default function Home() {
  const [mainColor, setMainColor] = useState("#36EAA9");
  const [steps, setSteps] = useState(4);
  const [lightShades, setLightShades] = useState<string[]>([]);
  const [darkShades, setDarkShades] = useState<string[]>([]);

  const updateMainColor = (e: React.ChangeEvent<HTMLInputElement>) => {
    const color = e.target.value;
    setMainColor(color);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.wrapper}>
        <section className={styles.main}>
          <section className={styles.colorsPreview}>
            <ShadesBlock
              shades={darkShades}
              names={generateShadeNames("darken", steps)}
            />
            <ColorBlock
              className={styles.mainColorShade}
              color={mainColor}
              name="50"
            />
            <ShadesBlock
              shades={lightShades}
              names={generateShadeNames("lighten", steps)}
            />
          </section>

          <section className={styles.controls}>
            <ControlsBlock
              steps={steps}
              onChange={(shades) => setDarkShades(shades)}
              mainColor={mainColor}
              direction="darken"
            />
            <section className={styles.colorControlWrap}>
              <div className={styles.mainColorControl}>
                <label
                  htmlFor="main-color-input"
                  className={styles.colorControl}
                >
                  <span className={styles.hexCode}>
                    {mainColor.toUpperCase()}
                  </span>
                  <div
                    className={styles.colorPreview}
                    style={{
                      backgroundColor: mainColor
                    }}
                  />
                  <input
                    id="main-color-input"
                    type="color"
                    value={mainColor}
                    onChange={updateMainColor}
                  />
                </label>
              </div>
            </section>

            <ControlsBlock
              steps={steps}
              onChange={(shades) => setLightShades(shades)}
              mainColor={mainColor}
              direction="lighten"
            />
          </section>
        </section>

        <Sidebar
          steps={steps}
          onPlusClick={() => setSteps(steps + 1)}
          onMinusClick={() => {
            if (steps > 1) {
              setSteps(steps - 1);
            }
          }}
        />
      </main>
    </>
  );
}
